{"ast":null,"code":"var _jsxFileName = \"D:\\\\contact\\\\Contact_Manager_App\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, CLEAR_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactState = props => {\n  _s();\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Delete Contact\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n  // Update Contact\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n  //Clear Contacts \n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      updateContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContactState;\nexport default ContactState;\nvar _c;\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","axios","contactContext","contactReducer","GET_CONTACTS","CLEAR_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","jsxDEV","_jsxDEV","ContactState","props","_s","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","console","log","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearContacts","clearFilter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/contact/Contact_Manager_App/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport  contactContext  from './contactContext';\r\nimport  contactReducer  from './contactReducer';\r\n\r\nimport {\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS,\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR\r\n} from '../types'\r\n\r\nconst ContactState = props =>{\r\n    const initialState ={\r\n        contacts:null,\r\n        current: null,\r\n        filtered: null,\r\n        error: null\r\n    }\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n\r\n    //Get Contacts\r\n\r\n    const getContacts = async () =>{\r\n        try {\r\n            const res = await axios.get('/api/contacts');\r\n            dispatch({type: GET_CONTACTS, payload:res.data});\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Add Contact\r\n    const addContact = async contact =>{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/contacts', contact, config);\r\n            dispatch({ type: ADD_CONTACT, payload: res.data });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // Delete Contact\r\n\r\n    const deleteContact = id =>{\r\n        dispatch({type: DELETE_CONTACT, payload: id});\r\n    };\r\n\r\n    // Set Current Contact\r\n    const setCurrent = contact =>{\r\n        dispatch({type: SET_CURRENT, payload: contact});\r\n    };\r\n    // Clear Current Contact\r\n    const clearCurrent = ()=>{\r\n        dispatch({type: CLEAR_CURRENT});\r\n    }\r\n    // Update Contact\r\n    const updateContact = contact =>{\r\n        dispatch({type: UPDATE_CONTACT, payload: contact})\r\n    }\r\n    \r\n    // Filter Contacts\r\n    const filterContacts = text => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text })\r\n    }\r\n    //Clear Contacts \r\n    const clearContacts = ()=>{\r\n        dispatch({type:CLEAR_CONTACTS});\r\n    }\r\n    // Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n    return(\r\n        <contactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                filtered: state.filtered,\r\n                error: state.error,\r\n                addContact,\r\n                updateContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                filterContacts,\r\n                clearFilter,\r\n                getContacts,\r\n                clearContacts\r\n            }}\r\n        >\r\n            {props.children}\r\n           \r\n        </contactContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ContactState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}