{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    default:\n      return state;\n  }\n};\nexport default contactReducer;","map":{"version":3,"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","contactReducer","state","action","type","contacts","payload","error","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email"],"sources":["D:/contact/Contact_Manager_App/client/src/context/contact/contactReducer.js"],"sourcesContent":["import {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR\r\n} from '../types'\r\n\r\nconst contactReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n        case CONTACT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }    \r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload: contact) \r\n            }    \r\n        case DELETE_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case SET_CURRENT:\r\n            return{\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return{\r\n                ...state,\r\n                current:null\r\n\r\n            }        \r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact => {\r\n                const regex = new RegExp(`${action.payload}`, 'gi');\r\n                return contact.name.match(regex) || contact.email.match(regex);\r\n                })\r\n            }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null\r\n            }            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default contactReducer;\r\n"],"mappings":"AAAA,SACIA,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,YAAY,EACZC,aAAa,QACV,UAAU;AAEjB,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKX,WAAW;MACZ,OAAO;QACH,GAAGS,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,EAAEF,MAAM,CAACG,OAAO;MAChD,CAAC;IACL,KAAKN,aAAa;MACd,OAAO;QACH,GAAGE,KAAK;QACRK,KAAK,EAAEJ,MAAM,CAACG;MAClB,CAAC;IACL,KAAKT,cAAc;MACf,OAAO;QACH,GAAGK,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO,CAACI,EAAE,GAAGP,MAAM,CAACG,OAAO,GAAEG,OAAO;MACtG,CAAC;IACL,KAAKf,cAAc;MACf,OAAM;QACF,GAAGQ,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACM,MAAM,CAACF,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO;MAC5E,CAAC;IACL,KAAKX,WAAW;MACZ,OAAM;QACF,GAAGO,KAAK;QACRU,OAAO,EAAET,MAAM,CAACG;MACpB,CAAC;IACL,KAAKV,aAAa;MACd,OAAM;QACF,GAAGM,KAAK;QACRU,OAAO,EAAC;MAEZ,CAAC;IACL,KAAKd,eAAe;MAChB,OAAO;QACH,GAAGI,KAAK;QACRW,QAAQ,EAAEX,KAAK,CAACG,QAAQ,CAACM,MAAM,CAACF,OAAO,IAAI;UAC3C,MAAMK,KAAK,GAAG,IAAIC,MAAM,CAAE,GAAEZ,MAAM,CAACG,OAAQ,EAAC,EAAE,IAAI,CAAC;UACnD,OAAOG,OAAO,CAACO,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,IAAIL,OAAO,CAACS,KAAK,CAACD,KAAK,CAACH,KAAK,CAAC;QAC9D,CAAC;MACL,CAAC;IACL,KAAKf,YAAY;MACb,OAAO;QACH,GAAGG,KAAK;QACRW,QAAQ,EAAE;MACd,CAAC;IACL;MACI,OAAOX,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}